name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      # É uma boa prática restaurar a solução inteira
      - name: Restore dependencies
        run: dotnet restore OrionHealth.sln 
      - name: Build
        run: dotnet build OrionHealth.sln --no-restore --configuration Release
      - name: Test
        run: dotnet test OrionHealth.sln --no-build --configuration Release

  push-to-dockerhub:
    name: Build and Push Docker Image
    needs: build-and-test
    # Condição para rodar apenas em push para main ou develop
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # Especifique o caminho para o seu Dockerfile
          file: ./src/OrionHealth.Worker/Dockerfile
          push: true
          tags: |
            eldersousadevelop/healthhub:latest
            eldersousadevelop/healthhub:${{ github.sha }}

  # NOVO JOB PARA FAZER O DEPLOY NO SERVIDOR
  deploy-to-server:
    name: Deploy to Server
    needs: push-to-dockerhub # Depende do job que envia a imagem
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Container with Twilio Secrets
        # Action para conectar via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pára e remove o contêiner antigo para evitar conflitos
            docker stop orionhealth-worker || true
            docker rm orionhealth-worker || true

            # Baixa a imagem mais recente do Docker Hub
            docker pull eldersousadevelop/healthhub:latest

            # Executa o novo contêiner, injetando os segredos do Twilio
            docker run -d \
              --name orionhealth-worker \
              --restart always \
              -e TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }} \
              -e TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }} \
              eldersousadevelop/healthhub:latest